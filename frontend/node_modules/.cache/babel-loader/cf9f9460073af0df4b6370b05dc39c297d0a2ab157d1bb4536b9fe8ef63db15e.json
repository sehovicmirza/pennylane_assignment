{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RecipeList(_ref){let{recipes,onSelectRecipe}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"recipe-list\",children:recipes.map((recipe,index)=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>{console.log(\"Recipe clicked:\",recipe);onSelectRecipe(recipe);},children:[/*#__PURE__*/_jsx(\"h3\",{children:recipe.title}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Cook Time: \",recipe.cook_time,\" minutes\"]})]},index))});}export default RecipeList;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","RecipeList","_ref","recipes","onSelectRecipe","className","children","map","recipe","index","onClick","console","log","title","cook_time"],"sources":["/Users/mirzasehovic/projects/pennylane_assignment/pennylane_assignment/frontend/src/RecipeList.js"],"sourcesContent":["import React from 'react';\n\nfunction RecipeList({ recipes, onSelectRecipe }) {\n    return (\n        <div className=\"recipe-list\">\n            {recipes.map((recipe, index) => (\n                <div key={index} onClick={() => {\n                    console.log(\"Recipe clicked:\", recipe);\n                    onSelectRecipe(recipe);\n                }}>\n                    <h3>{recipe.title}</h3>\n                    <p>Cook Time: {recipe.cook_time} minutes</p>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default RecipeList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAA8B,IAA7B,CAAEC,OAAO,CAAEC,cAAe,CAAC,CAAAF,IAAA,CAC3C,mBACIJ,IAAA,QAAKO,SAAS,CAAC,aAAa,CAAAC,QAAA,CACvBH,OAAO,CAACI,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,gBACvBT,KAAA,QAAiBU,OAAO,CAAEA,CAAA,GAAM,CAC5BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEJ,MAAM,CAAC,CACtCJ,cAAc,CAACI,MAAM,CAAC,CAC1B,CAAE,CAAAF,QAAA,eACER,IAAA,OAAAQ,QAAA,CAAKE,MAAM,CAACK,KAAK,CAAK,CAAC,cACvBb,KAAA,MAAAM,QAAA,EAAG,aAAW,CAACE,MAAM,CAACM,SAAS,CAAC,UAAQ,EAAG,CAAC,GALtCL,KAML,CACR,CAAC,CACD,CAAC,CAEd,CAEA,cAAe,CAAAR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}